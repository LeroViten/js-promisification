{"version":3,"sources":["js/second.js"],"names":["users","name","active","toggleUserState","allUsers","userName","Promise","resolve","map","user","console","log","logger","updatedUsers","table","then"],"mappings":";;;AAwBA,aAxBA,QAAA,qBAGA,MAAMA,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,CAACC,EAAUC,IAC1B,IAAIC,QAAQC,IAIjBA,EAHqBH,EAASI,IAAIC,GAChCA,EAAKR,OAASI,EAAW,IAAKI,EAAMP,QAASO,EAAKP,QAAWO,KAG9D,KAGLC,QAAQC,IAAK,0BAA0B,kCACvC,MAAMC,EAASC,GAAgBH,QAAQI,MAAMD,GAG7CV,EAAgBH,EAAO,SAASe,KAAKH,GACrCT,EAAgBH,EAAO,OAAOe,KAAKH","file":"second.27fe3baa.js","sourceRoot":"../src","sourcesContent":["import '../sass/main.scss';\n\n// =================== TASK 2 ====================\nconst users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n  return new Promise(resolve => {\n    const updatedUsers = allUsers.map(user =>\n      user.name === userName ? { ...user, active: !user.active } : user,\n    );\n    resolve(updatedUsers);\n  }, 2000);\n};\n\nconsole.log(`%c TASK 2 results here:`, 'color: green; font-size: 20px;');\nconst logger = updatedUsers => console.table(updatedUsers);\n\n// Check for working:\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Lux').then(logger);\n"]}