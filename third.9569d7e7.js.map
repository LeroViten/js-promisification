{"version":3,"sources":["js/third.js"],"names":["randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","id","Promise","resolve","reject","delay","setTimeout","logSuccess","console","log","logError","warn","amount","then","catch"],"mappings":";;;AAuCA,aAvCA,QAAA,qBAGA,MAAMA,EAA4B,CAACC,EAAKC,IAC/BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGhDK,EAAkB,EAAGC,GAAAA,KAClB,IAAIC,QAAQ,CAACC,EAASC,KACrBC,MAAAA,EAAQX,EAA0B,IAAK,KAE7CY,WAAW,KACUT,KAAKE,SAAW,IAEjCI,EAAQ,CAAEF,GAAAA,EAAII,MAAAA,IAEhBD,EAAO,CAAEH,GAAAA,KACRI,KAIDE,EAAa,EAAGN,GAAAA,EAAII,MAAAA,MACxBG,QAAQC,sBAAsBR,kBAAmBI,MAAW,mCAGxDK,EAAW,EAAGT,GAAAA,MAClBO,QAAQG,wCAC6BV,6BACnC,iCAKJD,EAAgB,CAAEC,GAAI,GAAIW,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ,GAEhEV,EAAgB,CAAEC,GAAI,GAAIW,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ,GAEhEV,EAAgB,CAAEC,GAAI,GAAIW,OAAQ,KAAMC,KAAKN,GAAYO,MAAMJ,GAE/DV,EAAgB,CAAEC,GAAI,GAAIW,OAAQ,MAAOC,KAAKN,GAAYO,MAAMJ","file":"third.9569d7e7.js","sourceRoot":"../src","sourcesContent":["import '../sass/main.scss';\n\n// =================== TASK 3 ====================\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = ({ id }) => {\n  return new Promise((resolve, reject) => {\n    const delay = randomIntegerFromInterval(200, 500);\n\n    setTimeout(() => {\n      const canProcess = Math.random() > 0.3;\n      if (canProcess) {\n        resolve({ id, delay });\n      }\n      reject({ id });\n    }, delay);\n  });\n};\n\nconst logSuccess = ({ id, delay }) => {\n  console.log(`%c Transaction ${id} processed in ${delay}ms`, 'color: green; font-size: 14px;');\n};\n\nconst logError = ({ id }) => {\n  console.warn(\n    `%c Error processing transaction ${id}. Please try again later.`,\n    'color: red; font-size: 14px;',\n  );\n};\n\n// Check for working:\nmakeTransaction({ id: 70, amount: 150 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 }).then(logSuccess).catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 }).then(logSuccess).catch(logError);\n"]}